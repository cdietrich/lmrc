/*
* generated by Xtext
*/
package org.xtext.example.lmrc.uispec.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.lmrc.uispec.services.UispecDslGrammarAccess;

public class UispecDslParser extends AbstractContentAssistParser {
	
	@Inject
	private UispecDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.lmrc.uispec.ui.contentassist.antlr.internal.InternalUispecDslParser createParser() {
		org.xtext.example.lmrc.uispec.ui.contentassist.antlr.internal.InternalUispecDslParser result = new org.xtext.example.lmrc.uispec.ui.contentassist.antlr.internal.InternalUispecDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getWidgetAccess().getAlternatives(), "rule__Widget__Alternatives");
					put(grammarAccess.getFormAccess().getGroup(), "rule__Form__Group__0");
					put(grammarAccess.getEntityReferenceAccess().getGroup(), "rule__EntityReference__Group__0");
					put(grammarAccess.getFQNAccess().getGroup(), "rule__FQN__Group__0");
					put(grammarAccess.getFQNAccess().getGroup_1(), "rule__FQN__Group_1__0");
					put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
					put(grammarAccess.getTextFieldWidgetAccess().getGroup(), "rule__TextFieldWidget__Group__0");
					put(grammarAccess.getCheckBoxWidgetAccess().getGroup(), "rule__CheckBoxWidget__Group__0");
					put(grammarAccess.getComboWidgetAccess().getGroup(), "rule__ComboWidget__Group__0");
					put(grammarAccess.getComboWidgetAccess().getGroup_3(), "rule__ComboWidget__Group_3__0");
					put(grammarAccess.getComboWidgetAccess().getGroup_3_1(), "rule__ComboWidget__Group_3_1__0");
					put(grammarAccess.getFormAccess().getNameAssignment_1(), "rule__Form__NameAssignment_1");
					put(grammarAccess.getFormAccess().getUsedEntitiesAssignment_2(), "rule__Form__UsedEntitiesAssignment_2");
					put(grammarAccess.getFormAccess().getFieldsAssignment_3(), "rule__Form__FieldsAssignment_3");
					put(grammarAccess.getEntityReferenceAccess().getEntityAssignment_1(), "rule__EntityReference__EntityAssignment_1");
					put(grammarAccess.getFieldAccess().getLabelAssignment_1(), "rule__Field__LabelAssignment_1");
					put(grammarAccess.getFieldAccess().getWidgetAssignment_3(), "rule__Field__WidgetAssignment_3");
					put(grammarAccess.getFieldAccess().getAttributeAssignment_5(), "rule__Field__AttributeAssignment_5");
					put(grammarAccess.getTextFieldWidgetAccess().getLengthAssignment_2(), "rule__TextFieldWidget__LengthAssignment_2");
					put(grammarAccess.getComboWidgetAccess().getValuesAssignment_3_0(), "rule__ComboWidget__ValuesAssignment_3_0");
					put(grammarAccess.getComboWidgetAccess().getValuesAssignment_3_1_1(), "rule__ComboWidget__ValuesAssignment_3_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.lmrc.uispec.ui.contentassist.antlr.internal.InternalUispecDslParser typedParser = (org.xtext.example.lmrc.uispec.ui.contentassist.antlr.internal.InternalUispecDslParser) parser;
			typedParser.entryRuleForm();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public UispecDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(UispecDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
